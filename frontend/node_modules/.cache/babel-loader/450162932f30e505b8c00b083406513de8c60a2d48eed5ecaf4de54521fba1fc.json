{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://localhost:8000/api\";\nexport const fetchRandomSample = async (rows, tokens, {\n  priceType,\n  priceUnit,\n  solPrice,\n  token\n} = {}) => {\n  const params = {\n    rows,\n    tokens\n  };\n  if (priceType) params.price_type = priceType;\n  if (priceUnit) params.price_unit = priceUnit;\n  if (solPrice) params.sol_price = solPrice;\n  if (token) params.token_list = token;\n  const res = await axios.get(`${API_BASE}/random_sample`, {\n    params\n  });\n  return res.data;\n};\nexport const fetchTopTokens = async (top = 20) => {\n  const res = await axios.get(`${API_BASE}/top_tokens`, {\n    params: {\n      top\n    }\n  });\n  return res.data.data;\n};\nexport const fetchPriceRanges = async (priceType = \"buy_price\") => {\n  const res = await axios.get(`${API_BASE}/price_ranges`, {\n    params: {\n      price_type: priceType\n    }\n  });\n  return res.data.data;\n};\nexport const fetchFilterData = async ({\n  priceType,\n  priceUnit,\n  solPrice,\n  token,\n  priceBin,\n  page,\n  pageSize,\n  buyPriceFilter,\n  abnormal_only\n}) => {\n  const params = {\n    price_type: priceType,\n    price_unit: priceUnit,\n    sol_price: solPrice,\n    page,\n    page_size: pageSize\n  };\n  if (token) params.token_list = token;\n  if (priceBin !== undefined && priceBin !== null) params.price_bin = priceBin;\n  if (buyPriceFilter) params.buy_price_filter = buyPriceFilter;\n  if (abnormal_only) params.abnormal_only = abnormal_only;\n  const res = await axios.get(`${API_BASE}/filter_data`, {\n    params\n  });\n  return res.data;\n};\nexport const fetchBatchBinsData = async ({\n  priceType,\n  bins,\n  page = 1,\n  pageSize = 20\n}) => {\n  const params = {\n    price_type: priceType,\n    bins: bins.join(','),\n    page,\n    page_size: pageSize\n  };\n  const res = await axios.get(`${API_BASE}/batch_bins_data`, {\n    params\n  });\n  return res.data;\n};","map":{"version":3,"names":["axios","API_BASE","fetchRandomSample","rows","tokens","priceType","priceUnit","solPrice","token","params","price_type","price_unit","sol_price","token_list","res","get","data","fetchTopTokens","top","fetchPriceRanges","fetchFilterData","priceBin","page","pageSize","buyPriceFilter","abnormal_only","page_size","undefined","price_bin","buy_price_filter","fetchBatchBinsData","bins","join"],"sources":["N:/Windsurf/Hubble-QA/QA-20250419/PriceChecker/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = \"http://localhost:8000/api\";\n\nexport const fetchRandomSample = async (rows, tokens, { priceType, priceUnit, solPrice, token } = {}) => {\n  const params = { rows, tokens };\n  if (priceType) params.price_type = priceType;\n  if (priceUnit) params.price_unit = priceUnit;\n  if (solPrice) params.sol_price = solPrice;\n  if (token) params.token_list = token;\n  const res = await axios.get(`${API_BASE}/random_sample`, { params });\n  return res.data;\n};\n\nexport const fetchTopTokens = async (top = 20) => {\n  const res = await axios.get(`${API_BASE}/top_tokens`, {\n    params: { top }\n  });\n  return res.data.data;\n};\n\nexport const fetchPriceRanges = async (priceType = \"buy_price\") => {\n  const res = await axios.get(`${API_BASE}/price_ranges`, {\n    params: { price_type: priceType }\n  });\n  return res.data.data;\n};\n\nexport const fetchFilterData = async ({ priceType, priceUnit, solPrice, token, priceBin, page, pageSize, buyPriceFilter, abnormal_only }) => {\n  const params = {\n    price_type: priceType,\n    price_unit: priceUnit,\n    sol_price: solPrice,\n    page,\n    page_size: pageSize\n  };\n  if (token) params.token_list = token;\n  if (priceBin !== undefined && priceBin !== null) params.price_bin = priceBin;\n  if (buyPriceFilter) params.buy_price_filter = buyPriceFilter;\n  if (abnormal_only) params.abnormal_only = abnormal_only;\n  const res = await axios.get(`${API_BASE}/filter_data`, { params });\n  return res.data;\n};\n\nexport const fetchBatchBinsData = async ({ priceType, bins, page = 1, pageSize = 20 }) => {\n  const params = {\n    price_type: priceType,\n    bins: bins.join(','),\n    page,\n    page_size: pageSize\n  };\n  const res = await axios.get(`${API_BASE}/batch_bins_data`, { params });\n  return res.data;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}