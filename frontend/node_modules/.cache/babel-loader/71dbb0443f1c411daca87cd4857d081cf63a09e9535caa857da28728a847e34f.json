{"ast":null,"code":"var _jsxFileName = \"N:\\\\Windsurf\\\\Hubble-QA\\\\QA-20250419\\\\PriceChecker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Layout, InputNumber, Button, Row, Col, Typography, message, Select, Spin, Tabs } from \"antd\";\nimport PriceTable from \"./components/PriceTable\";\nimport AbnormalFilterButton from \"./components/AbnormalFilterButton\";\nimport { fetchRandomSample, fetchTopTokens, fetchBatchBinsData, fetchFilterData } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content\n} = Layout;\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst {\n  TabPane\n} = Tabs;\nfunction App() {\n  _s();\n  var _binData$activeBin2, _binData$activeBin3, _binData$activeBin$to, _binData$activeBin4;\n  const [rows, setRows] = useState(100);\n  const [tokens, setTokens] = useState(10);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [topTokens, setTopTokens] = useState([]);\n  const [tokenLoading, setTokenLoading] = useState(false);\n  const [selectedToken, setSelectedToken] = useState(null);\n  const [priceType, setPriceType] = useState(\"buy_price\");\n  const [priceUnit, setPriceUnit] = useState(\"USD\");\n  const [timezone, setTimezone] = useState(\"gmt8\");\n  const [showFullToken, setShowFullToken] = useState(false);\n  const [solPrice, setSolPrice] = useState(133);\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n  const [total, setTotal] = useState(0);\n  const [mode, setMode] = useState('all'); // all: 全量分页, sample: 随机抽样\n  const [summary, setSummary] = useState(null);\n  const [samplePage, setSamplePage] = useState(1);\n  const [samplePageSize, setSamplePageSize] = useState(20);\n  const [abnormalMode, setAbnormalMode] = useState(false); // 新增异常模式\n\n  // 区间tab相关\n  const binIdxList = [4, 3, 2, 5, 1, 0]; // 保證 tab 與預加載順序均以 100-1K USD (bin 4) 為第一順位\n  const [activeBin, setActiveBin] = useState(4); // 預設 activeBin 也為 4\n  const [binData, setBinData] = useState({}); // {binIdx: {data, total}}\n  const [binLoading, setBinLoading] = useState(false);\n  useEffect(() => {\n    setActiveBin(4); // 保證初次渲染時tab正確\n  }, []);\n  useEffect(() => {\n    if (mode === 'sample') {\n      setSamplePage(1);\n      setSamplePageSize(20);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (mode === 'sample') {\n      setSamplePage(1);\n    }\n  }, [mode]);\n\n  // 僅在 mode !== 'sample' 時才根據 selectedToken 自動過濾 data\n  useEffect(() => {\n    if (mode !== 'sample') {\n      let intermediateData = data;\n      if (selectedToken) {\n        intermediateData = intermediateData.filter(row => row.token_mint_address === selectedToken);\n      }\n      setData(intermediateData);\n    }\n  }, [data, selectedToken, mode]);\n\n  // 价格区间详细文案\n  const binLabels = [\"0-10 USD\", \"10-100 USD\", \"100-1K USD\", \"1K-10K USD\", \"10K-100K USD\", \"100K+ USD\"];\n  useEffect(() => {\n    setTokenLoading(true);\n    fetchTopTokens(20).then(setTopTokens).catch(err => console.error(\"Fetch top tokens error:\", err)).finally(() => setTokenLoading(false));\n  }, []);\n  useEffect(() => {\n    setBinLoading(true);\n    fetchBatchBinsData({\n      priceType,\n      priceUnit,\n      solPrice,\n      bins: binIdxList,\n      page: 1,\n      pageSize\n    }).then(res => setBinData(res)).finally(() => setBinLoading(false));\n  }, [priceType, priceUnit, solPrice, pageSize]);\n  useEffect(() => {\n    setPage(1);\n    fetchPageData({\n      page: 1\n    });\n  }, [selectedToken, priceType, priceUnit, solPrice]); // 移除 buyPriceFilter 依赖\n\n  // 异常值过滤切换\n  const handleAbnormalFilter = () => {\n    if (!abnormalMode) {\n      setLoading(true);\n      fetchFilterData({\n        priceType,\n        priceUnit,\n        solPrice,\n        token: selectedToken,\n        page,\n        pageSize,\n        abnormal_only: true\n      }).then(res => {\n        setData(res.data || []);\n        setTotal(res.total || 0);\n        setSummary(res.summary || null);\n        setMode('all');\n        setAbnormalMode(true);\n      }).catch(err => {\n        message.error('获取异常数据失败');\n        setData([]);\n        setSummary(null);\n      }).finally(() => setLoading(false));\n    } else {\n      setAbnormalMode(false);\n      fetchPageData(); // 恢复全量\n    }\n  };\n  const handleSampleTableChange = pagination => {\n    setSamplePage(pagination.current);\n    setSamplePageSize(pagination.pageSize);\n  };\n  const handleQuery = () => {\n    setLoading(true);\n    setSamplePage(1);\n    setSamplePageSize(20);\n    fetchRandomSample(rows, tokens, {\n      priceType,\n      priceUnit,\n      solPrice,\n      token: selectedToken,\n      priceBin: activeBin // 傳遞當前tab bin index\n    }).then(res => {\n      var _res$data;\n      setData(res.data || []);\n      setTotal(res.total || 0);\n      setSummary(res.summary || null);\n      setMode('sample');\n      message.success(`成功获取 ${((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.length) || 0} 条随机样本`);\n    }).catch(err => {\n      message.error('获取数据失败');\n      setData([]);\n      setSummary(null);\n    }).finally(() => setLoading(false));\n  };\n\n  // 預加載多頁 bins 數據\n  const preloadBinPages = async (binIdx, pages = 5, pageSize = 100) => {\n    setBinLoading(true);\n    let allRows = [];\n    let total = 0;\n    for (let p = 1; p <= pages; p++) {\n      // 每頁單獨請求\n      const res = await fetchBatchBinsData({\n        priceType,\n        priceUnit,\n        solPrice,\n        bins: [binIdx],\n        page: p,\n        pageSize\n      });\n      if (res && res[binIdx]) {\n        allRows = allRows.concat(res[binIdx].data || []);\n        total = res[binIdx].total;\n      }\n    }\n    setBinData(prev => ({\n      ...prev,\n      [binIdx]: {\n        data: allRows,\n        total,\n        loadedPages: new Set(Array.from({\n          length: pages\n        }, (_, i) => i + 1))\n      }\n    }));\n    setBinLoading(false);\n  };\n  const handleTabChange = key => {\n    const idx = Number(key);\n    setActiveBin(idx);\n    setPage(1); // 切換tab時重置到第一頁\n    if (!binData[idx] || !binData[idx].loadedPages || binData[idx].loadedPages.size < 5) {\n      preloadBinPages(idx, 5, 100);\n    }\n    // 直接更新total为该区间的total\n    if (binData[idx] && binData[idx].total !== undefined) {\n      setTotal(binData[idx].total);\n    }\n  };\n\n  // bins分頁時如超出已加載範圍則動態加載新頁\n  const handleTableChange = pagination => {\n    var _binData$activeBin;\n    setPage(pagination.current);\n    setPageSize(pagination.pageSize);\n    const loadedPages = ((_binData$activeBin = binData[activeBin]) === null || _binData$activeBin === void 0 ? void 0 : _binData$activeBin.loadedPages) || new Set();\n    const targetPage = pagination.current;\n    if (!loadedPages.has(targetPage)) {\n      // 動態加載新頁並合併\n      fetchBatchBinsData({\n        priceType,\n        priceUnit,\n        solPrice,\n        bins: [activeBin],\n        page: targetPage,\n        pageSize: pagination.pageSize\n      }).then(res => {\n        if (res && res[activeBin]) {\n          setBinData(prev => {\n            var _prev$activeBin;\n            const prevRows = ((_prev$activeBin = prev[activeBin]) === null || _prev$activeBin === void 0 ? void 0 : _prev$activeBin.data) || [];\n            const startIdx = (targetPage - 1) * pagination.pageSize;\n            const newRows = res[activeBin].data || [];\n            // 合併新頁數據到正確位置\n            const mergedRows = [...prevRows];\n            for (let i = 0; i < newRows.length; i++) {\n              mergedRows[startIdx + i] = newRows[i];\n            }\n            const newLoadedPages = new Set(loadedPages);\n            newLoadedPages.add(targetPage);\n            return {\n              ...prev,\n              [activeBin]: {\n                data: mergedRows,\n                total: res[activeBin].total,\n                loadedPages: newLoadedPages\n              }\n            };\n          });\n        }\n      });\n    }\n  };\n  const handleReset = () => {\n    setMode('all');\n    fetchPageData(); // fetchPageData 已带当前 tab/bin/筛选条件\n  };\n  const controlSize = \"middle\";\n\n  // 随机抽样分页数据（slice 容错处理）\n  const pagedSampleData = mode === 'sample' && Number.isInteger(samplePage) && Number.isInteger(samplePageSize) && samplePage > 0 && samplePageSize > 0 ? data.slice((samplePage - 1) * samplePageSize, samplePage * samplePageSize) : [];\n\n  // bins分頁數據\n  const pagedBinData = (_binData$activeBin2 = binData[activeBin]) !== null && _binData$activeBin2 !== void 0 && _binData$activeBin2.data && Array.isArray(binData[activeBin].data) ? binData[activeBin].data.slice((page - 1) * pageSize, page * pageSize) : [];\n  const binSummary = ((_binData$activeBin3 = binData[activeBin]) === null || _binData$activeBin3 === void 0 ? void 0 : _binData$activeBin3.summary) || null;\n  const binTotal = (_binData$activeBin$to = (_binData$activeBin4 = binData[activeBin]) === null || _binData$activeBin4 === void 0 ? void 0 : _binData$activeBin4.total) !== null && _binData$activeBin$to !== void 0 ? _binData$activeBin$to : 0;\n  const getTablePagination = () => {\n    // 随机抽样模式下启用分页（前端分页，数据不变）\n    if (mode === 'sample') {\n      return {\n        current: samplePage,\n        pageSize: samplePageSize,\n        total: data.length,\n        showTotal: total => `共 ${total} 条`,\n        showSizeChanger: true,\n        onChange: handleSampleTableChange\n      };\n    }\n    // 全量分页模式下正常分页\n    if (abnormalMode) {\n      return {\n        current: page,\n        pageSize,\n        total,\n        showTotal: total => `共 ${total} 条`,\n        showSizeChanger: true,\n        onChange: handleTableChange\n      };\n    }\n    // bins分頁\n    return {\n      current: page,\n      pageSize,\n      total: binTotal,\n      showTotal: total => `共 ${total} 条`,\n      showSizeChanger: true,\n      onChange: handleTableChange\n    };\n  };\n  const fetchPageData = (params = {}) => {\n    setLoading(true);\n    fetchFilterData({\n      priceType,\n      priceUnit,\n      solPrice,\n      token: selectedToken,\n      page,\n      pageSize,\n      ...params\n    }).then(res => {\n      setData(res.data || []);\n      setTotal(res.total || 0);\n      setSummary(res.summary || null);\n      setMode('all');\n    }).catch(err => {\n      message.error('获取数据失败');\n      setData([]);\n      setSummary(null);\n    }).finally(() => setLoading(false));\n  };\n\n  // DEBUG: 翻頁及數據變動時打印狀態\n  useEffect(() => {\n    if (mode === 'sample') {\n      console.log('[DEBUG] data.length:', data.length, 'samplePage:', samplePage, 'samplePageSize:', samplePageSize);\n      console.log('[DEBUG] pagedSampleData:', data.slice((samplePage - 1) * samplePageSize, samplePage * samplePageSize));\n    }\n  }, [data, samplePage, samplePageSize, mode]);\n  const sampleFirstIn = useRef(true);\n  useEffect(() => {\n    if (mode === 'sample') {\n      if (sampleFirstIn.current) {\n        setSamplePage(1);\n        setSamplePageSize(20);\n        sampleFirstIn.current = false;\n      }\n    } else {\n      sampleFirstIn.current = true;\n    }\n  }, [mode]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        background: \"#fff\",\n        padding: \"10px 24px 10px 24px\",\n        height: 'auto',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        justify: \"space-between\",\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          flex: \"none\",\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 4,\n            style: {\n              margin: 0,\n              display: 'flex',\n              alignItems: 'center',\n              height: '100%'\n            },\n            children: \"Price Checker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          flex: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [8, 8],\n            align: \"middle\",\n            justify: \"end\",\n            wrap: true,\n            style: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Spin, {\n                spinning: tokenLoading,\n                size: controlSize,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  allowClear: true,\n                  showSearch: true,\n                  style: {\n                    minWidth: 130\n                  },\n                  placeholder: \"Token\",\n                  value: selectedToken,\n                  onChange: setSelectedToken,\n                  optionFilterProp: \"children\",\n                  filterOption: (input, option) => {\n                    var _option$children;\n                    return ((_option$children = option === null || option === void 0 ? void 0 : option.children) !== null && _option$children !== void 0 ? _option$children : '').toLowerCase().includes(input.toLowerCase());\n                  },\n                  size: controlSize,\n                  children: topTokens.map(t => /*#__PURE__*/_jsxDEV(Option, {\n                    value: t.token_mint_address,\n                    children: [\"(\", t.count, \") \", t.token_mint_address.slice(0, 6), \"...\"]\n                  }, t.token_mint_address, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: priceType,\n                onChange: setPriceType,\n                style: {\n                  minWidth: 70\n                },\n                size: controlSize,\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"buy_price\",\n                  children: \"\\u4E70\\u4EF7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"sell_price\",\n                  children: \"\\u5356\\u4EF7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 4\n                },\n                children: \"Rows\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 1,\n                max: 10000,\n                value: rows,\n                onChange: setRows,\n                style: {\n                  width: 90\n                },\n                size: controlSize\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 4\n                },\n                children: \"Tokens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 1,\n                max: 1000,\n                value: tokens,\n                onChange: setTokens,\n                style: {\n                  width: 90\n                },\n                size: controlSize\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 4\n                },\n                children: \"SOL/USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 1,\n                max: 10000,\n                value: solPrice,\n                onChange: setSolPrice,\n                style: {\n                  width: 100\n                },\n                size: controlSize\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: priceUnit,\n                onChange: setPriceUnit,\n                style: {\n                  minWidth: 70\n                },\n                size: controlSize,\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"SOL\",\n                  children: \"SOL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"USD\",\n                  children: \"USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: timezone,\n                onChange: setTimezone,\n                style: {\n                  minWidth: 80\n                },\n                size: controlSize,\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"gmt0\",\n                  children: \"GMT+0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"gmt8\",\n                  children: \"GMT+8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: showFullToken,\n                onChange: setShowFullToken,\n                style: {\n                  minWidth: 90\n                },\n                size: controlSize,\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: false,\n                  children: \"Token\\u7F29\\u7565\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: true,\n                  children: \"Token\\u5168\\u663E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: handleQuery,\n                loading: loading,\n                size: controlSize,\n                children: \"\\u67E5\\u8BE2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(AbnormalFilterButton, {\n                loading: loading,\n                abnormalMode: abnormalMode,\n                onClick: handleAbnormalFilter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReset,\n                size: controlSize,\n                children: \"\\u91CD\\u7F6E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        activeKey: activeBin.toString(),\n        onChange: handleTabChange,\n        items: binIdxList.map(idx => ({\n          key: idx.toString(),\n          label: binLabels[idx] || `Bin${idx}`\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PriceTable, {\n        data: mode === 'sample' ? data : abnormalMode ? data : pagedBinData,\n        summary: mode === 'sample' ? summary : abnormalMode ? summary : binSummary,\n        loading: loading || binLoading,\n        timezone: timezone,\n        showFullToken: showFullToken,\n        priceUnit: priceUnit,\n        pagination: getTablePagination(),\n        rowKey: row => row.transaction_signature || row.id || row.key || row.token_mint_address || row.index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ifGcYE0jXiQXqmJ4KRDSDoGXGq4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Layout","InputNumber","Button","Row","Col","Typography","message","Select","Spin","Tabs","PriceTable","AbnormalFilterButton","fetchRandomSample","fetchTopTokens","fetchBatchBinsData","fetchFilterData","jsxDEV","_jsxDEV","Header","Content","Title","Option","TabPane","App","_s","_binData$activeBin2","_binData$activeBin3","_binData$activeBin$to","_binData$activeBin4","rows","setRows","tokens","setTokens","data","setData","loading","setLoading","topTokens","setTopTokens","tokenLoading","setTokenLoading","selectedToken","setSelectedToken","priceType","setPriceType","priceUnit","setPriceUnit","timezone","setTimezone","showFullToken","setShowFullToken","solPrice","setSolPrice","page","setPage","pageSize","setPageSize","total","setTotal","mode","setMode","summary","setSummary","samplePage","setSamplePage","samplePageSize","setSamplePageSize","abnormalMode","setAbnormalMode","binIdxList","activeBin","setActiveBin","binData","setBinData","binLoading","setBinLoading","intermediateData","filter","row","token_mint_address","binLabels","then","catch","err","console","error","finally","bins","res","fetchPageData","handleAbnormalFilter","token","abnormal_only","handleSampleTableChange","pagination","current","handleQuery","priceBin","_res$data","success","length","preloadBinPages","binIdx","pages","allRows","p","concat","prev","loadedPages","Set","Array","from","_","i","handleTabChange","key","idx","Number","size","undefined","handleTableChange","_binData$activeBin","targetPage","has","_prev$activeBin","prevRows","startIdx","newRows","mergedRows","newLoadedPages","add","handleReset","controlSize","pagedSampleData","isInteger","slice","pagedBinData","isArray","binSummary","binTotal","getTablePagination","showTotal","showSizeChanger","onChange","params","log","sampleFirstIn","style","minHeight","children","background","padding","height","display","alignItems","align","justify","width","flex","level","margin","fileName","_jsxFileName","lineNumber","columnNumber","gutter","wrap","spinning","allowClear","showSearch","minWidth","placeholder","value","optionFilterProp","filterOption","input","option","_option$children","toLowerCase","includes","map","t","count","marginRight","min","max","type","onClick","activeKey","toString","items","label","rowKey","transaction_signature","id","index","_c","$RefreshReg$"],"sources":["N:/Windsurf/Hubble-QA/QA-20250419/PriceChecker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Layout, InputNumber, Button, Row, Col, Typography, message, Select, Spin, Tabs } from \"antd\";\nimport PriceTable from \"./components/PriceTable\";\nimport AbnormalFilterButton from \"./components/AbnormalFilterButton\";\nimport { fetchRandomSample, fetchTopTokens, fetchBatchBinsData, fetchFilterData } from \"./api\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nfunction App() {\n  const [rows, setRows] = useState(100);\n  const [tokens, setTokens] = useState(10);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [topTokens, setTopTokens] = useState([]);\n  const [tokenLoading, setTokenLoading] = useState(false);\n  const [selectedToken, setSelectedToken] = useState(null);\n  const [priceType, setPriceType] = useState(\"buy_price\");\n  const [priceUnit, setPriceUnit] = useState(\"USD\"); \n  const [timezone, setTimezone] = useState(\"gmt8\");\n  const [showFullToken, setShowFullToken] = useState(false);\n  const [solPrice, setSolPrice] = useState(133); \n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n  const [total, setTotal] = useState(0);\n  const [mode, setMode] = useState('all'); // all: 全量分页, sample: 随机抽样\n  const [summary, setSummary] = useState(null);\n  const [samplePage, setSamplePage] = useState(1);\n  const [samplePageSize, setSamplePageSize] = useState(20);\n  const [abnormalMode, setAbnormalMode] = useState(false); // 新增异常模式\n\n  // 区间tab相关\n  const binIdxList = [4, 3, 2, 5, 1, 0]; // 保證 tab 與預加載順序均以 100-1K USD (bin 4) 為第一順位\n  const [activeBin, setActiveBin] = useState(4); // 預設 activeBin 也為 4\n  const [binData, setBinData] = useState({}); // {binIdx: {data, total}}\n  const [binLoading, setBinLoading] = useState(false);\n\n  useEffect(() => {\n    setActiveBin(4); // 保證初次渲染時tab正確\n  }, []);\n\n  useEffect(() => {\n    if (mode === 'sample') {\n      setSamplePage(1);\n      setSamplePageSize(20);\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    if (mode === 'sample') {\n      setSamplePage(1);\n    }\n  }, [mode]);\n\n  // 僅在 mode !== 'sample' 時才根據 selectedToken 自動過濾 data\n  useEffect(() => {\n    if (mode !== 'sample') {\n      let intermediateData = data;\n      if (selectedToken) {\n        intermediateData = intermediateData.filter(row => row.token_mint_address === selectedToken);\n      }\n      setData(intermediateData);\n    }\n  }, [data, selectedToken, mode]);\n\n  // 价格区间详细文案\n  const binLabels = [\n    \"0-10 USD\",\n    \"10-100 USD\",\n    \"100-1K USD\",\n    \"1K-10K USD\",\n    \"10K-100K USD\",\n    \"100K+ USD\"\n  ];\n\n  useEffect(() => {\n    setTokenLoading(true);\n    fetchTopTokens(20)\n      .then(setTopTokens)\n      .catch(err => console.error(\"Fetch top tokens error:\", err))\n      .finally(() => setTokenLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setBinLoading(true);\n    fetchBatchBinsData({ priceType, priceUnit, solPrice, bins: binIdxList, page: 1, pageSize })\n      .then(res => setBinData(res))\n      .finally(() => setBinLoading(false));\n  }, [priceType, priceUnit, solPrice, pageSize]);\n\n  useEffect(() => {\n    setPage(1);\n    fetchPageData({ page: 1 });\n  }, [selectedToken, priceType, priceUnit, solPrice]); // 移除 buyPriceFilter 依赖\n\n  // 异常值过滤切换\n  const handleAbnormalFilter = () => {\n    if (!abnormalMode) {\n      setLoading(true);\n      fetchFilterData({\n        priceType,\n        priceUnit,\n        solPrice,\n        token: selectedToken,\n        page,\n        pageSize,\n        abnormal_only: true\n      })\n        .then(res => {\n          setData(res.data || []);\n          setTotal(res.total || 0);\n          setSummary(res.summary || null);\n          setMode('all');\n          setAbnormalMode(true);\n        })\n        .catch(err => {\n          message.error('获取异常数据失败');\n          setData([]);\n          setSummary(null);\n        })\n        .finally(() => setLoading(false));\n    } else {\n      setAbnormalMode(false);\n      fetchPageData(); // 恢复全量\n    }\n  };\n\n  const handleSampleTableChange = (pagination) => {\n    setSamplePage(pagination.current);\n    setSamplePageSize(pagination.pageSize);\n  };\n\n  const handleQuery = () => {\n    setLoading(true);\n    setSamplePage(1);\n    setSamplePageSize(20);\n    fetchRandomSample(rows, tokens, {\n      priceType,\n      priceUnit,\n      solPrice,\n      token: selectedToken,\n      priceBin: activeBin // 傳遞當前tab bin index\n    })\n      .then(res => {\n        setData(res.data || []);\n        setTotal(res.total || 0);\n        setSummary(res.summary || null);\n        setMode('sample');\n        message.success(`成功获取 ${res.data?.length || 0} 条随机样本`);\n      })\n      .catch(err => {\n        message.error('获取数据失败');\n        setData([]);\n        setSummary(null);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  // 預加載多頁 bins 數據\n  const preloadBinPages = async (binIdx, pages = 5, pageSize = 100) => {\n    setBinLoading(true);\n    let allRows = [];\n    let total = 0;\n    for (let p = 1; p <= pages; p++) {\n      // 每頁單獨請求\n      const res = await fetchBatchBinsData({ priceType, priceUnit, solPrice, bins: [binIdx], page: p, pageSize });\n      if (res && res[binIdx]) {\n        allRows = allRows.concat(res[binIdx].data || []);\n        total = res[binIdx].total;\n      }\n    }\n    setBinData(prev => ({\n      ...prev,\n      [binIdx]: { data: allRows, total, loadedPages: new Set(Array.from({length: pages}, (_, i) => i + 1)) }\n    }));\n    setBinLoading(false);\n  };\n\n  const handleTabChange = (key) => {\n    const idx = Number(key);\n    setActiveBin(idx);\n    setPage(1); // 切換tab時重置到第一頁\n    if (!binData[idx] || !binData[idx].loadedPages || binData[idx].loadedPages.size < 5) {\n      preloadBinPages(idx, 5, 100);\n    }\n    // 直接更新total为该区间的total\n    if (binData[idx] && binData[idx].total !== undefined) {\n      setTotal(binData[idx].total);\n    }\n  };\n\n  // bins分頁時如超出已加載範圍則動態加載新頁\n  const handleTableChange = (pagination) => {\n    setPage(pagination.current);\n    setPageSize(pagination.pageSize);\n    const loadedPages = binData[activeBin]?.loadedPages || new Set();\n    const targetPage = pagination.current;\n    if (!loadedPages.has(targetPage)) {\n      // 動態加載新頁並合併\n      fetchBatchBinsData({ priceType, priceUnit, solPrice, bins: [activeBin], page: targetPage, pageSize: pagination.pageSize })\n        .then(res => {\n          if (res && res[activeBin]) {\n            setBinData(prev => {\n              const prevRows = prev[activeBin]?.data || [];\n              const startIdx = (targetPage - 1) * pagination.pageSize;\n              const newRows = res[activeBin].data || [];\n              // 合併新頁數據到正確位置\n              const mergedRows = [...prevRows];\n              for (let i = 0; i < newRows.length; i++) {\n                mergedRows[startIdx + i] = newRows[i];\n              }\n              const newLoadedPages = new Set(loadedPages);\n              newLoadedPages.add(targetPage);\n              return {\n                ...prev,\n                [activeBin]: {\n                  data: mergedRows,\n                  total: res[activeBin].total,\n                  loadedPages: newLoadedPages\n                }\n              };\n            });\n          }\n        });\n    }\n  };\n\n  const handleReset = () => {\n    setMode('all');\n    fetchPageData(); // fetchPageData 已带当前 tab/bin/筛选条件\n  };\n\n  const controlSize = \"middle\";\n\n  // 随机抽样分页数据（slice 容错处理）\n  const pagedSampleData =\n    mode === 'sample' && Number.isInteger(samplePage) && Number.isInteger(samplePageSize) && samplePage > 0 && samplePageSize > 0\n      ? data.slice((samplePage - 1) * samplePageSize, samplePage * samplePageSize)\n      : [];\n\n  // bins分頁數據\n  const pagedBinData =\n    binData[activeBin]?.data && Array.isArray(binData[activeBin].data)\n      ? binData[activeBin].data.slice((page - 1) * pageSize, page * pageSize)\n      : [];\n\n  const binSummary = binData[activeBin]?.summary || null;\n  const binTotal = binData[activeBin]?.total ?? 0;\n\n  const getTablePagination = () => {\n    // 随机抽样模式下启用分页（前端分页，数据不变）\n    if (mode === 'sample') {\n      return {\n        current: samplePage,\n        pageSize: samplePageSize,\n        total: data.length,\n        showTotal: (total) => `共 ${total} 条`,\n        showSizeChanger: true,\n        onChange: handleSampleTableChange,\n      };\n    }\n    // 全量分页模式下正常分页\n    if (abnormalMode) {\n      return {\n        current: page,\n        pageSize,\n        total,\n        showTotal: (total) => `共 ${total} 条`,\n        showSizeChanger: true,\n        onChange: handleTableChange,\n      };\n    }\n    // bins分頁\n    return {\n      current: page,\n      pageSize,\n      total: binTotal,\n      showTotal: (total) => `共 ${total} 条`,\n      showSizeChanger: true,\n      onChange: handleTableChange,\n    };\n  };\n\n  const fetchPageData = (params = {}) => {\n    setLoading(true);\n    fetchFilterData({\n      priceType,\n      priceUnit,\n      solPrice,\n      token: selectedToken,\n      page,\n      pageSize,\n      ...params\n    })\n      .then(res => {\n        setData(res.data || []);\n        setTotal(res.total || 0);\n        setSummary(res.summary || null);\n        setMode('all');\n      })\n      .catch(err => {\n        message.error('获取数据失败');\n        setData([]);\n        setSummary(null);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  // DEBUG: 翻頁及數據變動時打印狀態\n  useEffect(() => {\n    if (mode === 'sample') {\n      console.log('[DEBUG] data.length:', data.length, 'samplePage:', samplePage, 'samplePageSize:', samplePageSize);\n      console.log('[DEBUG] pagedSampleData:', data.slice((samplePage - 1) * samplePageSize, samplePage * samplePageSize));\n    }\n  }, [data, samplePage, samplePageSize, mode]);\n\n  const sampleFirstIn = useRef(true);\n  useEffect(() => {\n    if (mode === 'sample') {\n      if (sampleFirstIn.current) {\n        setSamplePage(1);\n        setSamplePageSize(20);\n        sampleFirstIn.current = false;\n      }\n    } else {\n      sampleFirstIn.current = true;\n    }\n  }, [mode]);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header style={{ background: \"#fff\", padding: \"10px 24px 10px 24px\", height: 'auto', display: 'flex', alignItems: 'center' }}>\n        <Row align=\"middle\" justify=\"space-between\" style={{ width: '100%' }}>\n          <Col flex=\"none\">\n            <Title level={4} style={{ margin: 0, display: 'flex', alignItems: 'center', height: '100%' }}>Price Checker</Title>\n          </Col>\n          <Col flex=\"auto\">\n            <Row gutter={[8, 8]} align=\"middle\" justify=\"end\" wrap style={{ height: '100%' }}>\n              <Col>\n                <Spin spinning={tokenLoading} size={controlSize}>\n                  <Select\n                    allowClear\n                    showSearch\n                    style={{ minWidth: 130 }}\n                    placeholder=\"Token\"\n                    value={selectedToken}\n                    onChange={setSelectedToken}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      (option?.children ?? '').toLowerCase().includes(input.toLowerCase())\n                    }\n                    size={controlSize}\n                  >\n                    {topTokens.map(t => (\n                      <Option key={t.token_mint_address} value={t.token_mint_address}>\n                        ({t.count}) {t.token_mint_address.slice(0, 6)}...\n                      </Option>\n                    ))}\n                  </Select>\n                </Spin>\n              </Col>\n              <Col>\n                <Select\n                  value={priceType}\n                  onChange={setPriceType}\n                  style={{ minWidth: 70 }}\n                  size={controlSize}\n                >\n                  <Option value=\"buy_price\">买价</Option>\n                  <Option value=\"sell_price\">卖价</Option>\n                </Select>\n              </Col>\n              <Col>\n                <span style={{ marginRight: 4 }}>Rows</span>\n                <InputNumber min={1} max={10000} value={rows} onChange={setRows} style={{ width: 90 }} size={controlSize} />\n              </Col>\n              <Col>\n                <span style={{ marginRight: 4 }}>Tokens</span>\n                <InputNumber min={1} max={1000} value={tokens} onChange={setTokens} style={{ width: 90 }} size={controlSize} />\n              </Col>\n              <Col>\n                <span style={{ marginRight: 4 }}>SOL/USD</span>\n                <InputNumber min={1} max={10000} value={solPrice} onChange={setSolPrice} style={{ width: 100 }} size={controlSize} />\n              </Col>\n              <Col>\n                <Select\n                  value={priceUnit}\n                  onChange={setPriceUnit}\n                  style={{ minWidth: 70 }}\n                  size={controlSize}\n                >\n                  <Option value=\"SOL\">SOL</Option>\n                  <Option value=\"USD\">USD</Option>\n                </Select>\n              </Col>\n              <Col>\n                <Select\n                  value={timezone}\n                  onChange={setTimezone}\n                  style={{ minWidth: 80 }}\n                  size={controlSize}\n                >\n                  <Option value=\"gmt0\">GMT+0</Option>\n                  <Option value=\"gmt8\">GMT+8</Option>\n                </Select>\n              </Col>\n              <Col>\n                <Select\n                  value={showFullToken}\n                  onChange={setShowFullToken}\n                  style={{ minWidth: 90 }}\n                  size={controlSize}\n                >\n                  <Option value={false}>Token缩略</Option>\n                  <Option value={true}>Token全显</Option>\n                </Select>\n              </Col>\n              <Col>\n                <Button type=\"primary\" onClick={handleQuery} loading={loading} size={controlSize}>\n                  查询\n                </Button>\n              </Col>\n              <Col>\n                <AbnormalFilterButton\n                  loading={loading}\n                  abnormalMode={abnormalMode}\n                  onClick={handleAbnormalFilter}\n                />\n              </Col>\n              <Col>\n                <Button onClick={handleReset} size={controlSize}>重置</Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Header>\n      <Content style={{ padding: 24 }}>\n        <Tabs\n          activeKey={activeBin.toString()}\n          onChange={handleTabChange}\n          items={binIdxList.map(idx => ({\n            key: idx.toString(),\n            label: binLabels[idx] || `Bin${idx}`\n          }))}\n        />\n        <PriceTable\n          data={mode === 'sample' ? data : abnormalMode ? data : pagedBinData}\n          summary={mode === 'sample' ? summary : abnormalMode ? summary : binSummary}\n          loading={loading || binLoading}\n          timezone={timezone}\n          showFullToken={showFullToken}\n          priceUnit={priceUnit}\n          pagination={getTablePagination()}\n          rowKey={row => row.transaction_signature || row.id || row.key || row.token_mint_address || row.index}\n        />\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}